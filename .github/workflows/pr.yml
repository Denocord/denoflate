name: Build - Rust

on:
    pull_request:
        paths:
            - src/**
            - .github/workflows/**
            - Cargo.toml
jobs:
    build:
        name: Build for ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        timeout-minutes: 60
        strategy:
            matrix:
                os: [ macos-latest, windows-latest, ubuntu-latest ]
        steps:
            - name: Clone repository
              uses: actions/checkout@v2

            - name: Install rust
              uses: hecrj/setup-rust-action@v1
            
            - uses: actions/cache@v2
              with:
                path: |
                    ~/.cargo/registry
                    ~/.cargo/git
                     target
                key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
              name: Cache cargo files

            - name: Build
              env:
                RUST_BACKTRACE: 1
              run: cargo build --release
    build_wasm:
        name: Build for WASM
        runs-on: ubuntu-latest
        timeout-minutes: 60
        steps:
            - name: Clone repository
              uses: actions/checkout@v2

            - name: Install rust
              uses: hecrj/setup-rust-action@v1

            - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
              name: Install wasm-pack

            - uses: actions/cache@v2
              with:
                path: |
                    ~/.cargo/registry
                    ~/.cargo/git
                    target
                key: wasm-cargo-${{ hashFiles('**/Cargo.toml') }}
              name: Cache cargo files

            - name: Build
              env:
                RUST_BACKTRACE: 1
              run: wasm-pack build --release --target web 

            - name: Pack WASM for distribution
              uses: Denocord/deno-action@master
              with:
                  args: '["run", "--allow-read", "--allow-write", "dist-tools/pack-wasm.ts"]'

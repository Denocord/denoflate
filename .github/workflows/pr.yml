name: Build - Rust

on:
    pull_request:
        paths:
            - src/**
            - .github/workflows/**
            - Cargo.toml
jobs:
    build:
        name: Build for ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        timeout-minutes: 60
        strategy:
            fail-fast: false
            matrix:
                os: [ macos-latest, windows-latest, ubuntu-latest ]
        steps:
            - name: Clone repository
              uses: actions/checkout@v2

            - name: Install rust
              uses: hecrj/setup-rust-action@v1

            
            - uses: actions/cache@v2
              with:
                path: |
                    ~/.cargo/registry
                    ~/.cargo/git
                     target
                key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
              name: Cache cargo files

            - name: Build
              env:
                RUST_BACKTRACE: 1
              run: cargo build --release

            - uses: actions/upload-artifact@v2
              with:
                name: denoflate-${{ runner.os }}
                path: |
                  target/release/libdenoflate.so
                  target/release/denoflate.dll
                  target/release/libdenoflate.dylib
                if-no-files-found: ignore

            - uses: denolib/setup-deno@v2
            - name: Run the tests
              run: |
                deno test --allow-read --allow-write --allow-plugin --allow-env --unstable test

    build_wasm:
        name: Build for WASM
        runs-on: ubuntu-latest
        timeout-minutes: 60
        steps:
            - name: Clone repository
              uses: actions/checkout@v2

            - name: Install rust
              uses: hecrj/setup-rust-action@v1
            - name: Set up wasm32-wasi target
              run: |
                rustup target add wasm32-unknown-unknown
                rustup target add wasm32-wasi
            - run: cargo install wasm-bindgen-cli
              name: Install wasm-bindgen-cli


            - uses: actions/cache@v2
              with:
                path: |
                    ~/.cargo/registry
                    ~/.cargo/git
                    target
                key: wasm-cargo-${{ hashFiles('**/Cargo.toml') }}
              name: Cache cargo files

            - name: Build
              env:
                RUST_BACKTRACE: 1
              run: cargo build --release --target wasm32-wasi
            
            - name: Generate WASM glue
              run: wasm-bindgen --target web target/wasm32-wasi/release/denoflate.wasm --out-dir pkg

            - name: Pack WASM for distribution
              uses: Denocord/deno-action@master
              with:
                  args: '["run", "--allow-read", "--allow-write", "dist-tools/pack-wasm.ts"]'
            - uses: actions/upload-artifact@v2
              with:
                  path: |
                    wasm.js
                  if-no-files-found: ignore
                  name: denoflate-wasm
            - name: Run tests
              uses: Denocord/deno-action@master
              with:
                  args: '["test", "--allow-read", "--allow-env", "--unstable", "test"]'
              env:
                  COMP_MODE: wasm
